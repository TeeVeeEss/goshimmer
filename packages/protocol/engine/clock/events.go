package clock

import (
	"time"

	"github.com/iotaledger/hive.go/runtime/event"
)

// Events is a collection of events that can be triggered by the Clock.
type Events struct {
	// AcceptanceTimeUpdated is an Event for callbacks of the type func(newTime, now time.Time).
	AcceptanceTimeUpdated *event.Event2[time.Time, time.Time]

	// AcceptanceTimeUpdated is triggered when a Acceptance Tangle Time advances.
	ConfirmedTimeUpdated *event.Event2[time.Time, time.Time]

	// LinkableCollection is a generic trait that allows to link multiple collections of events together.
	event.Group[Events, *Events]
}

// NewEvents contains the constructor of the Events object (it is generated by a generic factory).
var NewEvents = event.CreateGroupConstructor(func() (newEvents *Events) {
	return &Events{
		ConfirmedTimeUpdated:  event.New2[time.Time, time.Time](),
		AcceptanceTimeUpdated: event.New2[time.Time, time.Time](),
	}
})
